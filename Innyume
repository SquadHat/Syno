if game:GetService("MarketplaceService"):GetProductInfo(game.placeId).Name ~= "The Deluxe" then
    return
end

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'INNYUME DELUXE',
    Center = true,
    AutoShow = true,
    TabPadding = 8
})

local Tabs = {
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

--// IGNORE \\--

Library:Notify("Roblox - INNYUME DELUXE - " .. game:GetService("MarketplaceService"):GetProductInfo(game.placeId).Name, 2.5)

Library:OnUnload(function()
end)

local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'H', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('Linoria')
SaveManager:SetFolder('Linoria/CHAIN')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()

--// V \\--

local LeftTabBox = Tabs.Main:AddLeftTabbox()
local RightTabBox = Tabs.Main:AddRightTabbox()
local FunctionsTab = LeftTabBox:AddTab('Functions')
local VisualsTab = RightTabBox:AddTab('Visuals')

--// Functions \\--

FunctionsTab:AddButton({
    Text = 'Auto Complete',
    Func = function()
        local HRP = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if HRP then
            for _, v in ipairs(game.workspace:GetChildren()) do
                local Trigger = v:FindFirstChild("Trigger")
                if Trigger and Trigger:IsA("BasePart") then
                    local TouchTransmitter = Trigger:FindFirstChildOfClass("TouchTransmitter")
                    if TouchTransmitter then
                        firetouchinterest(HRP, Trigger, 0)
                        wait(0.1)
                        firetouchinterest(HRP, Trigger, 1)
                        wait(0.5)
                    end
                end
            end
        end
        local TP1 = game.workspace:FindFirstChild("TP1")
        if TP1 and TP1:IsA("BasePart") then
            local ClickDetector = TP1:FindFirstChildOfClass("ClickDetector")
            if ClickDetector then
                fireclickdetector(ClickDetector)
            end
        end
    end,
})

FunctionsTab:AddButton({
    Text = 'All Badges',
    Func = function()
        local HRP = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if HRP then
            for _, v in ipairs(game.workspace:GetChildren()) do
                if v.Name == "jumpscare1" then
                    local HauntTrigger = v:FindFirstChild("HauntTrigger")
                    if HauntTrigger then
                        local TouchTransmitter = HauntTrigger:FindFirstChildOfClass("TouchTransmitter")
                        if TouchTransmitter then
                            firetouchinterest(HRP, HauntTrigger, 0)
                            wait(0.1)
                            firetouchinterest(HRP, HauntTrigger, 1)
                            wait(0.25)
                        end
                    end
                end
            end
        end
        for _, v in ipairs(game.workspace:GetChildren()) do
            local Trigger = v:FindFirstChild("Trigger")
            if Trigger and Trigger:IsA("BasePart") then
                local TouchTransmitter = Trigger:FindFirstChildOfClass("TouchTransmitter")
                if TouchTransmitter then
                    firetouchinterest(HRP, Trigger, 0)
                    wait(0.1)
                    firetouchinterest(HRP, Trigger, 1)
                    wait(0.25)
                end
            end
        end
        local TP1 = game.workspace:FindFirstChild("TP1")
        if TP1 and TP1:IsA("BasePart") then
            local ClickDetector = TP1:FindFirstChildOfClass("ClickDetector")
            if ClickDetector then
                fireclickdetector(ClickDetector)
            end
        end
    end,
})

--// Visuals \\--

VisualsTab:AddToggle('Smile', {
    Text = 'Smileghost',
    Default = false,
    Callback = function(Value)
        if Value then
            SMILEConnection = game:GetService('RunService').Stepped:Connect(function()
                local Bodies = game.workspace:FindFirstChild("Bodies")
                if Bodies then
                    for _, AI in ipairs(Bodies:GetChildren()) do
                        if AI.Name == "Ghost ai" and not AI:FindFirstChild("Smile") then
                            local HL = Instance.new("Highlight")
                            HL.Name = "Smile"
                            HL.Parent = AI
                            HL.FillTransparency = 1
                            HL.OutlineTransparency = 0
                            HL.OutlineColor = Color3.fromRGB(255, 255, 0)
                        end
                    end
                end
                for i = 1, 4 do
                    local AIFolder = game.workspace:FindFirstChild("ai" .. i)
                    if AIFolder then
                        for _, AI in ipairs(AIFolder:GetChildren()) do
                            if AI.Name == "Ghost ai" and not AI:FindFirstChild("Smile") then
                                local HL = Instance.new("Highlight")
                                HL.Name = "Smile"
                                HL.Parent = AI
                                HL.FillTransparency = 1
                                HL.OutlineTransparency = 0
                                HL.OutlineColor = Color3.fromRGB(255, 255, 0)
                            end
                        end
                    end
                end
            end)
            game.workspace.ChildAdded:Connect(function(v)
                for i = 1, 4 do
                    if v.Name == "ai" .. i then
                        v.ChildAdded:Connect(function(AI)
                            if AI.Name == "Ghost ai" and not AI:FindFirstChild("Smile") then
                                local HL = Instance.new("Highlight")
                                HL.Name = "Smile"
                                HL.Parent = AI
                                HL.FillTransparency = 1
                                HL.OutlineTransparency = 0
                                HL.OutlineColor = Color3.fromRGB(255, 0, 0)
                            end
                        end)
                    end
                end
            end)
        else
            if SMILEConnection then
                SMILEConnection:Disconnect()
                SMILEConnection = nil
                for _, Smile in ipairs({"Bodies", "ai1", "ai2", "ai3", "ai4"}) do
                    local AIFolder = game.workspace:FindFirstChild(Smile)
                    if AIFolder then
                        for _, AI in ipairs(AIFolder:GetChildren()) do
                            if AI.Name == "Ghost ai" then
                                local HL = AI:FindFirstChild("Smile")
                                if HL then
                                    HL:Destroy()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
})
